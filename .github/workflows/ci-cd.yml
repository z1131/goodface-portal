name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: read

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B -s .mvn/settings.xml package --file pom.xml

  docker:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ACR_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.ACR_REGISTRY }}/${{ secrets.ACR_NAMESPACE }}/goodface-portal
          tags: |
            type=sha,prefix=,suffix=,format=short
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./src/main/docker/Dockerfile
          build-args: |
            GITHUB_ACTOR=${{ github.actor }}
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-ecs:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.1
        with:
          ssh-private-key: ${{ secrets.ECS_SSH_KEY }}
      - name: Deploy to ECS
        run: |
          scp -o StrictHostKeyChecking=no deploy/docker-compose.yml ${{ secrets.ECS_USER }}@${{ secrets.ECS_HOST }}:/opt/goodface-portal/
          ssh -o StrictHostKeyChecking=no ${{ secrets.ECS_USER }}@${{ secrets.ECS_HOST }} << EOF
            cd /opt/goodface-portal
            export ACR_REGISTRY=${{ secrets.ACR_REGISTRY }}
            export ACR_NAMESPACE=${{ secrets.ACR_NAMESPACE }}
            export IMAGE_TAG=${GITHUB_SHA::7}
            export SPRING_PROFILES_ACTIVE=prod
            export SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}
            export SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
            export SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
            export SPRING_REDIS_HOST=${{ secrets.SPRING_REDIS_HOST }}
            export SPRING_REDIS_PORT=${{ secrets.SPRING_REDIS_PORT }}
            export DUBBO_REGISTRY_ADDRESS=${{ secrets.DUBBO_REGISTRY_ADDRESS }}
            docker compose pull
            docker compose up -d --remove-orphans
          EOF